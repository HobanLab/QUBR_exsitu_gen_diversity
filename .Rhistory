####SET UP####
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(dplyr)
library(tibble)
library(lubridate)
library(foreign)
library(MASS)
library(Hmisc)
library(reshape2)
library(brant)
library(GGally)
library(rgl)
library(survival)
library(scales)
library(ggmap)
library(rnaturalearth)
library(rnaturalearthdata)
library(maps)
library(sf)
library(sp)
library(raster)
library(basemaps)
library(mapedit)
#creates a function
"%notin%"<-Negate("%in%")
setwd("C:/Users/DBarry/Desktop/GitHub/QUBR_exsitu_gen_diversity")
Monitor1Date <- dmy("13/02/2022")
Monitor2Date <- dmy("20/01/2023")
Monitor3Date <- dmy("13/12/2023")
Monitor4Date <- dmy("23/11/2024")
LastObservedDateM3 <- Monitor3Date + 1
LastObservedDateM4 <- Monitor4Date + 1
#imports databases (2023 & 2024 tabs, 2024 field work)
outplanted_seedlings23 <- read_csv("./data/Datos de Siembra en Ranchos_Actualizado_05_2024.xlsx - Datos_Campaña_Seimbra_2023 04_23_2025.csv")
outplanted_seedlings24 <- read_csv("./data/Datos de Siembra en Ranchos_Actualizado_05_2024.xlsx - Datos_Campaña_Seimbra_2024 04_23_2025.csv")%>%
mutate('Núm. Etiqueta' = as.character('Núm. Etiqueta')) #interpret MetalTagID as a character, not numeric, because some inds have an A & B
outplanted_seedlings24.field <- read_csv("./data/QUBR Field Datasheets Nov 2024 - filled - OP Seedlings 03_27_25.csv")
####DATA CLEANING####
#combines data from Daniel's 2023 and 2024 tabs
seedlings_combined <- bind_rows(outplanted_seedlings23, outplanted_seedlings24)
#renames columns to simplified English, differentiates seed origin and seedling planted region
seedlings_clean <- seedlings_combined%>%
rename(Name = 'Nombre',
Town = 'Localidad',
Ranch = 'Rancho, Lugar o Sitio',
Monitor1 = '13/02/2022 - Monitoreo 1',
Monitor2 = '20/01/2023 Monitoreo 2',
Monitor3 = '13/12/2023\nMonitoreo 3',
OriginReg = 'Procedencia semilla  (color)',
PlantedReg = 'Región',
DatePlanted = 'Fecha transplante',
YearCollected = 'Año de colecta',
Observations = 'Observaciones',
Contact = 'Contacto',
PlantedIn = 'Sembrado en:',
Watered = 'Lluvia solida',
OriginLabelAsh = 'Procedencia Etiqueta Ash Abril 2024',
MetalTagID = 'Núm. Etiqueta')%>%
dplyr::select(-'Monitoreo 1 (__/__/__)')%>% #remove the placeholder column in Daniel's 2024 datasheet
filter(
#!str_detect(Ranch, "Festival"), #removes rows for individuals handed out at Festival 2023
!str_detect(Ranch, "Arroyo:"))%>% #removes individuals from the Arroyo: El Palo Santo for analysis bc we didn't observe them in 2024 (they were fairly new)
mutate(across(starts_with("Monitor"), ~ recode(.x, 'Perdida' = 'Muerta')))%>%  #reclass Perdida (lost) as Muerta (dead)
#calculate when a seedling died based on when it was last positively observed
mutate(DateDied = case_when((is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3)) | Monitor1 == 'Muerta' ~ dmy(DatePlanted),
(Monitor1 == 'Nueva' | Monitor1 == 'Viva') & (is.na(Monitor2) | Monitor2 == 'Muerta') ~ Monitor1Date,
(Monitor2 == 'Nueva' | Monitor2 == 'Viva') & (is.na(Monitor3) | Monitor3 == 'Muerta') ~ Monitor2Date))%>%
#format date as DayMonthYear
mutate(DatePlanted = dmy(DatePlanted),
DateDied = case_when(DateDied <= DatePlanted ~ DatePlanted, .default = DateDied))%>% #If TimeAlive is negative because DatePlanted occurs after DateDied, use DatePlanted, Otherwise default to using DateDied
#Calculate whether an ind is alive base on the most recent positive observation
mutate(Outcome = case_when(Monitor1 == 'Muerta' | Monitor2 == 'Muerta' | Monitor3 == 'Muerta' ~ 'Dead',
Monitor3 == 'Nueva' | Monitor3 == 'Viva' ~ 'Alive',
is.na(Monitor3) ~ 'Presumed Dead'),
PotentialTimeAlive = LastObservedDateM3 - DatePlanted, #days since it was first planted
TimeAlive = case_when(Outcome == 'Alive' ~ (LastObservedDateM3 - DatePlanted), #calculate TimeAlive as difference between DatePlanted and DateDied
Outcome == 'Dead' ~ (DateDied - DatePlanted),
Outcome == 'Presumed Dead' ~ (DateDied - DatePlanted)),
RatioTimeAlive = (as.numeric(TimeAlive)) / (as.numeric(PotentialTimeAlive)))
#Decide priority sites to visit in Baja based on number of potentially living individuals at each ranch
priority_sites <- seedlings_clean%>%
filter(Outcome == 'Alive')%>%
group_by(PlantedReg, Ranch, N, W)%>%
summarise(n())
#Takes data collected in the field in Nov 2024 and recodes some columns that have irregular (shade, height, etc)
outplanted_seedlings_nov24 <- outplanted_seedlings24.field%>%
#interprets dead individuals with a Height of N/A as a Height_cm of 0
mutate(Height_cm=recode(Height,'N/A' = '0'))%>%
#renames columns to match previous data
mutate(Ranch=recode(Ranch,
'San Dio' = 'Rancho San Dionisio',
'Santo Do' = 'Santo Domingo',
'La Palapa' = 'La Rueda (Palapa)',
'Parque de Santiago' = 'Parque Ecológico Santiago',
'Santa Gertrudis (orchard)' = 'Santa Gertudris (Huerta)',
'Santa Gertrudis' = 'Santa Gertudris',
'Palo Verdal' = 'Palo Verdad'))%>%
#combines equivalent variables
mutate(Monitor4=recode(Condition,
'the best' = 'Viva',
'great' = 'Viva',
'good' = 'Viva',
'fair' = 'Viva',
'poor' = 'Viva',
'dead' = 'Muerta'))%>%
mutate(Condition=recode(Condition, 'the best' = 'great'))%>%
mutate(Height=recode(Height, 'above the knee' = 'above knee',
'above shoulders' = 'above shoulder',
'taller than Daniel' = 'taller than Dana',
'1.5 Daniels' = 'taller than Dana',
'2 Daniels' = 'taller than Dana',
'mid hip' = 'hip',
'low hip' = 'below hip'))%>%
mutate(Canopy_cover=recode(`Canopy cover`, 'patial shade' = 'partial shade',
'mostly  sun' = 'mostly sun',
'total sun' = 'full sun'))%>%
#assigns numeric values to continuous variables
mutate(Condition_num=as.factor(recode(Condition,
'dead' = '0',
'poor' = '0.25',
'fair' = '0.5',
'good' = '0.75',
'great' = '1')))%>%
mutate(Canopy_num=recode(Canopy_cover,
'full shade' = '0',
'mostly shade' = '0.25', 'partial sun' = '0.25',
'half shade' = '0.5', 'half sun' = '0.5',
'partial shade' = '0.75', 'mostly sun' = '0.75',
'full sun' = '1'))%>%
mutate(Height_cm=recode(Height,
'N/A' = '0',
'below ankle' = '0-7.5',
'ankle' = '7.5-16.5',
'above ankle' = '16.5-29.5',
'mid shin' = '29.5-39.5',
'below knee' = '39.5-47',
'knee' = '47-57.5',
'above knee' = '57.5-71.5',
'below hip'= '71.5-85',
'hip' = '85-96.5',
'above hip' = '96.5-109.5',
'mid torso' = '109.5-123.5',
'below shoulders' = '123.5-136',
'shoulder' = '136-147',
'above shoulder' = '147-158.5',
'Dana height' = '158.5-171.5',
'taller than Dana' = '>171.5'
))%>%
mutate(Height_lower=recode(Height,
'N/A' = '0',
'below ankle' = '0',
'ankle' = '7.5',
'above ankle' = '16.5',
'mid shin' = '29.5',
'below knee' = '39.5',
'knee' = '47',
'above knee' = '57.5',
'below hip'= '71.5',
'hip' = '85',
'above hip' = '96.5',
'mid torso' = '109.5',
'below shoulders' = '123.5',
'shoulder' = '136',
'above shoulder' = '147',
'Dana height' = '158.5',
'taller than Dana' = '171.5'))%>%
mutate(Height_upper=recode(Height,
'N/A' = '0',
'below ankle' = '7.5',
'ankle' = '16.5',
'above ankle' = '29.5',
'mid shin' = '39.5',
'below knee' = '47',
'knee' = '57.5',
'above knee' = '71.5',
'below hip'= '85',
'hip' = '96.5',
'above hip' = '109.5',
'mid torso' = '123.5',
'below shoulders' = '136',
'shoulder' = '147',
'above shoulder' = '158.5',
'Dana height' = '171.5',
'taller than Dana' = '343'
))%>%
#converts variables into numeric so they can do math
mutate(Canopy_num=as.factor(Canopy_num))%>%
mutate(Height_cm=as.factor(Height_cm))%>%
mutate(MetalTagID = `Metal tag ID`)%>%
mutate(MetalTagID = as.character(MetalTagID)) #Some of the tags have an A/B
#Adding relevant data from most recent monitoring (Nov 2024) to the pre-existing data
seedlings_clean_joined <- outplanted_seedlings_nov24%>%
dplyr::select(Ranch, MetalTagID, Monitor4)%>% #these are the only columns we need to carry over to add the fourth monitoring date and then update survivorship curves
left_join(seedlings_clean, ., by = 'MetalTagID')%>%
#Adding to previous Outcome in seedlings_clean
mutate(Outcome = case_when(Monitor4 == 'Nueva' | Monitor4 == 'Viva' ~ 'Alive',
(Monitor1 == 'Muerta' | Monitor2 == 'Muerta' | Monitor3 == 'Muerta' | Monitor4 == 'Muerta') ~ 'Dead',
is.na(Monitor4) ~ 'Presumed Dead'))%>%
#Adding to previous DateDied in seedlings_clean:
#DateDied is calculated based on last positive observation
mutate(DateDied = case_when((is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) & is.na(Monitor4)) | Monitor1 == 'Muerta' ~ DatePlanted,
(Monitor1 == 'Viva' | Monitor1 == 'Nueva') & (Monitor2 == 'Muerta' | is.na(Monitor2)) ~ Monitor1Date,
(Monitor2 == 'Viva' | Monitor2 == 'Nueva') & (Monitor3 == 'Muerta' | is.na(Monitor3)) ~ Monitor2Date,
(Monitor3 == 'Viva' | Monitor3 == 'Nueva') & (Monitor4 == 'Muerta' | is.na(Monitor4)) ~ Monitor3Date))%>%
#If TimeAlive is negative because DatePlanted occurs after DateDied, use DatePlanted; otherwise default to DateDied
mutate(DateDied = case_when(DateDied <= DatePlanted ~ DatePlanted, .default = DateDied))%>%
mutate(PotentialTimeAlive = LastObservedDateM4 - DatePlanted)%>% #days since it was first planted
#TimeAlive is calculated based on outcome and time betweeen DatePlanted &  DateDied
mutate(TimeAlive = case_when(Outcome == 'Alive' ~ (LastObservedDateM4 - DatePlanted),
Outcome == 'Dead' ~ (DateDied - DatePlanted),
Outcome == 'Presumed Dead' ~ (DateDied - DatePlanted)))%>%
mutate(RatioTimeAlive = (as.numeric(TimeAlive)) / (as.numeric(PotentialTimeAlive)))%>%
mutate(LastObservedDateM4 = LastObservedDateM4)
#adds TimeAlive info to our outplanted individuals from Daniel's database
outplanted_seedlings_nov24 <- outplanted_seedlings_nov24%>%
left_join(., dplyr::select(seedlings_clean_joined, c('MetalTagID', 'TimeAlive')), by = 'MetalTagID')%>%
rename('Notes' = 'Notes/comments')%>% #below is to add TimeAlive to individuals missing TimeAlive
mutate(DatePlanted = case_when(
str_detect(Notes, 'festival') ~ '08/12/2023',
str_detect(Ranch, 'San Dio') ~ '01/09/2023'))%>%#We don't know the exact date in September they were planted, so we are using Sept 1st
mutate(TimeAlive = case_when(
!is.na(DatePlanted) ~ LastObservedDateM4 - dmy(DatePlanted),
is.na(DatePlanted) ~ TimeAlive))%>%
mutate(TimeAliveNum = as.numeric(TimeAlive))%>%
mutate(PotentialTimeAlive = LastObservedDateM4 - dmy(DatePlanted))
####MAPS####
#loads an outline map of the world
world <- ne_countries(scale = "medium", returnclass = "sf")
#makes the longitudinal coordinate negative so that it maps to the West rather than East
outplanted_seedlings_mapping <- outplanted_seedlings_nov24%>%
mutate(W = -(W))
#view the satellite imagery for the defined region
basemap_magick(bcs)
#defines the extent we want satellite imagery for
bcs <- draw_ext()
print(bcs)
data(bcs)
#sets the basemap style to satellite imagery
set_defaults(ext = bcs, map_service = "esri", map_type = "world_imagery")
#displays a map, zoomed to be larger than the population extent
ggplot(data = world) +
geom_sf(alpha = .01) +
geom_point(data = outplanted_seedlings_mapping, aes(x = `W`, y = `N`, color = Region), show.legend = F) +
coord_sf(xlim = c(min(-111), max(-109)), ylim = c(min(22.75), max(24.5)), expand = FALSE) + #limits the map to the population area
basemap_gglayer(ext = bcs) +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
map <- basemap()
#sets the basemap style to satellite imagery
set_defaults(ext = bcs, map_service = "esri", map_type = "world_imagery")
get_defaults()
basemap_ggplot(bcs)
#displays a map, zoomed to be larger than the population extent
ggplot(data = world) +
geom_sf(alpha = .01) +
geom_point(data = outplanted_seedlings_mapping, aes(x = `W`, y = `N`, color = Region), show.legend = F) +
coord_sf(xlim = c(min(-111), max(-109)), ylim = c(min(22.75), max(24.5)), expand = FALSE) + #limits the map to the population area
basemap_gglayer(bcs) +
scale_fill_identity() +
coord_sf() +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
ggplot(data = bcs) +
geom_sf(alpha = .01) +
geom_point(data = outplanted_seedlings_mapping, aes(x = `W`, y = `N`, color = Region), show.legend = F) +
coord_sf(xlim = c(min(-110.5), max(-109.5)), ylim = c(min(23.25), max(24.25)), expand = FALSE) +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
#displays a map, zoomed to be larger than the population extent
ggplot(data = world) +
geom_sf(alpha = .01) +
geom_point(data = outplanted_seedlings_mapping, aes(x = `W`, y = `N`, color = Region), show.legend = F) +
basemap_gglayer(bcs) +
scale_fill_identity() +
coord_sf(xlim = c(min(-111), max(-109)), ylim = c(min(22.75), max(24.5)), expand = FALSE) + #limits the map to the population area
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
basemap_ggplot(bcs)
#displays a map, zoomed to include/be larger than the population extent
ggplot(data = world) +
geom_sf(alpha = .01) +
geom_point(data = outplanted_seedlings_mapping, aes(x = `W`, y = `N`, color = Region), show.legend = F) +
basemap_gglayer(bcs) +
#scale_fill_identity() +
coord_sf(xlim = c(min(-111), max(-109)), ylim = c(min(22.75), max(24.5)), expand = FALSE) + #limits the map to the population area
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
#displays a map, zoomed to include/be larger than the population extent
ggplot(data = world) +
geom_sf(alpha = .01) +
geom_point(data = outplanted_seedlings_mapping, aes(x = `W`, y = `N`, color = Region), show.legend = F) +
#basemap_gglayer(bcs) +
#scale_fill_identity() +
coord_sf(xlim = c(min(-111), max(-109)), ylim = c(min(22.75), max(24.5)), expand = FALSE) + #limits the map to the population area
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
#displays a map, zoomed to include/be larger than the population extent
ggplot(data = world) +
geom_sf(alpha = .01) +
geom_point(data = outplanted_seedlings_mapping, aes(x = `W`, y = `N`, color = Region), show.legend = F) +
#basemap_gglayer(bcs) +
basemap_gglayer(ext) +
#scale_fill_identity() +
coord_sf(xlim = c(min(-111), max(-109)), ylim = c(min(22.75), max(24.5)), expand = FALSE) + #limits the map to the population area
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
#plots the selected area of the basemap
basemap_ggplot(bcs) +
geom_sf(alpha = .01) +
geom_point(data = outplanted_seedlings_mapping, aes(x = `W`, y = `N`, color = Region), show.legend = F) +
coord_sf(xlim = c(min(-111), max(-109)), ylim = c(min(22.75), max(24.5)), expand = FALSE) +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
#plots the selected area of the basemap
basemap_ggplot(bcs)
#returns the extent we defined
map <- basemap()
#view the satellite imagery for the defined region
basemap_magick(bcs)
#sets the basemap style to satellite imagery
set_defaults(ext = bcs, map_service = "esri", map_type = "world_imagery")
#displays a map W/O SATELLITE, zoomed to include points/be larger than the population extent
ggplot(data = world) +
geom_sf(alpha = .01) +
geom_point(data = outplanted_seedlings_mapping, aes(x = `W`, y = `N`, color = Region), show.legend = F) +
#basemap_gglayer(bcs) +
#scale_fill_identity() +
coord_sf(xlim = c(min(-111), max(-109)), ylim = c(min(22.75), max(24.5)), expand = FALSE) + #limits the map to the population area
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
