add_column(DateDied = NA)%>%
#calculate when a seedling died based on the last Monitoring date it was seen alive
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))%>%
add_column(Outcome = NA)
#renames columns to simplified English, differentiates seed origin and seedling planted region
seedlings_clean <- seedlings_combined%>%
rename(Name = 'Nombre')%>%
rename(Town = 'Localidad')%>%
rename(Ranch = 'Rancho, Lugar o Sitio')%>%
rename(Monitor1 = '13/02/2022 - Monitoreo 1')%>%
rename(Monitor2 = '20/01/2023 Monitoreo 2')%>%
rename(Monitor3 = '13/12/2023\nMonitoreo 3')%>%
rename(OriginReg = 'Procedencia semilla  (color)')%>%
rename(PlantedReg = 'Región')%>%
rename(DatePlanted = 'Fecha transplante')%>%
rename(YearCollected = 'Año de colecta')%>%
rename(Observations = 'Observaciones')%>%
rename(Contact = 'Contacto')%>%
rename(PlantedIn = 'Sembrado en:')%>%
rename(Watered = 'Lluvia solida')%>%
select(-'Monitoreo 1 (__/__/__)')%>%
rename(OriginLabelAsh = 'Procedencia Etiqueta Ash Abril 2024')%>%
rename(`Metal tag ID` = 'Núm. Etiqueta')%>%
mutate(Monitor1=recode(Monitor1, 'Perdida' = 'Muerta'))%>%#reclass Perdida (poor) as Muerta (dead)
add_column(DateDied = NA)
#calculate when a seedling died based on the last Monitoring date it was seen alive
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))%>%
add_column(Outcome = NA)
#calculate when a seedling died based on the last Monitoring date it was seen alive
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))%>%
add_column(Outcome = NA)%>%
#format date as DayMonthYear
add_column(TimeAlive = NA)%>%
add_column(RatioTimeAlive = NA)%>%
add_column(PotentialTimeAlive = NA)%>%
mutate(DateDied = dmy(DateDied))%>%
mutate(DatePlanted = dmy(DatePlanted))%>%
mutate(RatioTimeAlive = dmy(RatioTimeAlive))%>%
mutate(PotentialTimeAlive = dmy(PotentialTimeAlive))%>%
mutate(Outcome = case_when(Monitor1 == 'Muerta' | Monitor2 == 'Muerta' | Monitor3 == 'Muerta' ~ 'Dead',
Monitor3 == 'Nueva' | Monitor3 == 'Viva' ~ 'Alive',
Monitor2 == 'Nueva' & is.na(Monitor3) ~ 'Presumed Dead',
Monitor2 == 'Viva' & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead'
))%>%
#calculate TimeAlive as difference between DatePlanted and DateDied
mutate(TimeAlive = DateDied - DatePlanted)%>%
mutate(PotentialTimeAlive = Today - DatePlanted)%>% #days since it was first planted
mutate(TimeAlive = case_when(Outcome == 'Alive' ~ (Today - DatePlanted),
Outcome == 'Dead' ~ (DateDied - DatePlanted),
Outcome == 'Presumed Dead' ~ (DateDied - DatePlanted)))%>%
mutate(RatioTimeAlive = (as.numeric(TimeAlive)) / (as.numeric(PotentialTimeAlive)))%>%
#removes rows for individuals handed out at Festival 2023
filter(!str_detect(Ranch, "Festival"))
#calculate when a seedling died based on the last Monitoring date it was seen alive
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))%>%
add_column(Outcome = NA)%>%
#format date as DayMonthYear
add_column(TimeAlive = NA)%>%
add_column(RatioTimeAlive = NA)%>%
add_column(PotentialTimeAlive = NA)%>%
mutate(DateDied = dmy(DateDied))%>%
mutate(DatePlanted = dmy(DatePlanted))%>%
mutate(RatioTimeAlive = dmy(RatioTimeAlive))%>%
mutate(PotentialTimeAlive = dmy(PotentialTimeAlive))%>%
mutate(Outcome = case_when(Monitor1 == 'Muerta' | Monitor2 == 'Muerta' | Monitor3 == 'Muerta' ~ 'Dead',
Monitor3 == 'Nueva' | Monitor3 == 'Viva' ~ 'Alive',
Monitor2 == 'Nueva' & is.na(Monitor3) ~ 'Presumed Dead',
Monitor2 == 'Viva' & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead'
))%>%
#calculate TimeAlive as difference between DatePlanted and DateDied
mutate(TimeAlive = DateDied - DatePlanted)%>%
mutate(PotentialTimeAlive = Today - DatePlanted)%>% #days since it was first planted
mutate(TimeAlive = case_when(Outcome == 'Alive' ~ (Today - DatePlanted),
Outcome == 'Dead' ~ (DateDied - DatePlanted),
Outcome == 'Presumed Dead' ~ (DateDied - DatePlanted)))%>%
mutate(RatioTimeAlive = (as.numeric(TimeAlive)) / (as.numeric(PotentialTimeAlive)))%>%
#removes rows for individuals handed out at Festival 2023
filter(!str_detect(Ranch, "Festival"))
#renames columns to simplified English, differentiates seed origin and seedling planted region
seedlings_clean <- seedlings_combined%>%
rename(Name = 'Nombre')%>%
rename(Town = 'Localidad')%>%
rename(Ranch = 'Rancho, Lugar o Sitio')%>%
rename(Monitor1 = '13/02/2022 - Monitoreo 1')%>%
rename(Monitor2 = '20/01/2023 Monitoreo 2')%>%
rename(Monitor3 = '13/12/2023\nMonitoreo 3')%>%
rename(OriginReg = 'Procedencia semilla  (color)')%>%
rename(PlantedReg = 'Región')%>%
rename(DatePlanted = 'Fecha transplante')%>%
rename(YearCollected = 'Año de colecta')%>%
rename(Observations = 'Observaciones')%>%
rename(Contact = 'Contacto')%>%
rename(PlantedIn = 'Sembrado en:')%>%
rename(Watered = 'Lluvia solida')%>%
select(-'Monitoreo 1 (__/__/__)')%>%
rename(OriginLabelAsh = 'Procedencia Etiqueta Ash Abril 2024')%>%
rename(`Metal tag ID` = 'Núm. Etiqueta')%>%
mutate(Monitor1=recode(Monitor1, 'Perdida' = 'Muerta'))%>%#reclass Perdida (poor) as Muerta (dead)
add_column(DateDied = NA)
#calculate when a seedling died based on the last Monitoring date it was seen alive
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))%>%
add_column(Outcome = NA)%>%
#format date as DayMonthYear
add_column(TimeAlive = NA)%>%
add_column(RatioTimeAlive = NA)%>%
add_column(PotentialTimeAlive = NA)%>%
mutate(DateDied = dmy(DateDied))%>%
mutate(DatePlanted = dmy(DatePlanted))%>%
mutate(RatioTimeAlive = dmy(RatioTimeAlive))%>%
mutate(PotentialTimeAlive = dmy(PotentialTimeAlive))%>%
mutate(Outcome = case_when(Monitor1 == 'Muerta' | Monitor2 == 'Muerta' | Monitor3 == 'Muerta' ~ 'Dead',
Monitor3 == 'Nueva' | Monitor3 == 'Viva' ~ 'Alive',
Monitor2 == 'Nueva' & is.na(Monitor3) ~ 'Presumed Dead',
Monitor2 == 'Viva' & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead'
))%>%
#calculate TimeAlive as difference between DatePlanted and DateDied
mutate(TimeAlive = DateDied - DatePlanted)%>%
mutate(PotentialTimeAlive = Today - DatePlanted)%>% #days since it was first planted
mutate(TimeAlive = case_when(Outcome == 'Alive' ~ (Today - DatePlanted),
Outcome == 'Dead' ~ (DateDied - DatePlanted),
Outcome == 'Presumed Dead' ~ (DateDied - DatePlanted)))%>%
mutate(RatioTimeAlive = (as.numeric(TimeAlive)) / (as.numeric(PotentialTimeAlive)))%>%
#removes rows for individuals handed out at Festival 2023
filter(!str_detect(Ranch, "Festival"))
#calculate when a seedling died based on the last Monitoring date it was seen alive
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))%>%
add_column(Outcome = NA)%>%
#format date as DayMonthYear
add_column(TimeAlive = NA)%>%
add_column(RatioTimeAlive = NA)%>%
add_column(PotentialTimeAlive = NA)%>%
mutate(DateDied = dmy(DateDied))%>%
mutate(DatePlanted = dmy(DatePlanted))%>%
mutate(RatioTimeAlive = dmy(RatioTimeAlive))%>%
mutate(PotentialTimeAlive = dmy(PotentialTimeAlive))%>%
mutate(Outcome = case_when(Monitor1 == 'Muerta' | Monitor2 == 'Muerta' | Monitor3 == 'Muerta' ~ 'Dead',
Monitor3 == 'Nueva' | Monitor3 == 'Viva' ~ 'Alive',
Monitor2 == 'Nueva' & is.na(Monitor3) ~ 'Presumed Dead',
Monitor2 == 'Viva' & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead'
))%>%
#calculate TimeAlive as difference between DatePlanted and DateDied
mutate(TimeAlive = DateDied - DatePlanted)%>%
mutate(PotentialTimeAlive = Today - DatePlanted)%>% #days since it was first planted
mutate(TimeAlive = case_when(Outcome == 'Alive' ~ (Today - DatePlanted),
Outcome == 'Dead' ~ (DateDied - DatePlanted),
Outcome == 'Presumed Dead' ~ (DateDied - DatePlanted)))%>%
mutate(RatioTimeAlive = (as.numeric(TimeAlive)) / (as.numeric(PotentialTimeAlive)))%>%
#removes rows for individuals handed out at Festival 2023
filter(!str_detect(Ranch, "Festival"))
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))%>%
add_column(Outcome = NA)%>%
#format date as DayMonthYear
add_column(TimeAlive = NA)%>%
add_column(RatioTimeAlive = NA)%>%
add_column(PotentialTimeAlive = NA)%>%
mutate(DateDied = dmy(DateDied))%>%
mutate(DatePlanted = dmy(DatePlanted))%>%
mutate(RatioTimeAlive = dmy(RatioTimeAlive))%>%
mutate(PotentialTimeAlive = dmy(PotentialTimeAlive))%>%
mutate(Outcome = case_when(Monitor1 == 'Muerta' | Monitor2 == 'Muerta' | Monitor3 == 'Muerta' ~ 'Dead',
Monitor3 == 'Nueva' | Monitor3 == 'Viva' ~ 'Alive',
Monitor2 == 'Nueva' & is.na(Monitor3) ~ 'Presumed Dead',
Monitor2 == 'Viva' & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead'
))%>%
#calculate TimeAlive as difference between DatePlanted and DateDied
mutate(TimeAlive = DateDied - DatePlanted)%>%
mutate(PotentialTimeAlive = Today - DatePlanted)%>% #days since it was first planted
mutate(TimeAlive = case_when(Outcome == 'Alive' ~ (Today - DatePlanted),
Outcome == 'Dead' ~ (DateDied - DatePlanted),
Outcome == 'Presumed Dead' ~ (DateDied - DatePlanted)))%>%
mutate(RatioTimeAlive = (as.numeric(TimeAlive)) / (as.numeric(PotentialTimeAlive)))%>%
#removes rows for individuals handed out at Festival 2023
filter(!str_detect(Ranch, "Festival"))
#imports databases (2023 and 2024 tabs, 2024 field work)
outplanted_seedlings23 <- read_csv("./data/Datos de Siembra en Ranchos_Actualizado_05_2024.xlsx - Datos_Campaña_Seimbra_2023.csv")
outplanted_seedlings24 <- read_csv("./data/Datos de Siembra en Ranchos_Actualizado_05_2024.xlsx - Datos_Campaña_Seimbra_2024.csv")
outplanted_seedlings24.field <- read_csv("./data/QUBR Field Datasheets Nov 2024 - filled - OP Seedlings.csv")
summary(outplanted_seedlings23)
summary(outplanted_seedlings24)
summary(outplanted_seedlings24.field)
####DATA CLEANING####
#combines data from 2023 and 2024 tabs
seedlings_combined <- bind_rows(outplanted_seedlings23, outplanted_seedlings24)
summary(seedlings_combined)
#renames columns to simplified English, differentiates seed origin and seedling planted region
seedlings_clean <- seedlings_combined%>%
rename(Name = 'Nombre')%>%
rename(Town = 'Localidad')%>%
rename(Ranch = 'Rancho, Lugar o Sitio')%>%
rename(Monitor1 = '13/02/2022 - Monitoreo 1')%>%
rename(Monitor2 = '20/01/2023 Monitoreo 2')%>%
rename(Monitor3 = '13/12/2023\nMonitoreo 3')%>%
rename(OriginReg = 'Procedencia semilla  (color)')%>%
rename(PlantedReg = 'Región')%>%
rename(DatePlanted = 'Fecha transplante')%>%
rename(YearCollected = 'Año de colecta')%>%
rename(Observations = 'Observaciones')%>%
rename(Contact = 'Contacto')%>%
rename(PlantedIn = 'Sembrado en:')%>%
rename(Watered = 'Lluvia solida')%>%
select(-'Monitoreo 1 (__/__/__)')%>%
rename(OriginLabelAsh = 'Procedencia Etiqueta Ash Abril 2024')%>%
rename(`Metal tag ID` = 'Núm. Etiqueta')%>%
mutate(Monitor1=recode(Monitor1, 'Perdida' = 'Muerta'))%>%#reclass Perdida (poor) as Muerta (dead)
add_column(DateDied = NA)
#calculate when a seedling died based on the last Monitoring date it was seen alive
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))%>%
add_column(Outcome = NA)%>%
#format date as DayMonthYear
add_column(TimeAlive = NA)%>%
add_column(RatioTimeAlive = NA)%>%
add_column(PotentialTimeAlive = NA)%>%
mutate(DateDied = dmy(DateDied))%>%
mutate(DatePlanted = dmy(DatePlanted))%>%
mutate(RatioTimeAlive = dmy(RatioTimeAlive))%>%
mutate(PotentialTimeAlive = dmy(PotentialTimeAlive))%>%
mutate(Outcome = case_when(Monitor1 == 'Muerta' | Monitor2 == 'Muerta' | Monitor3 == 'Muerta' ~ 'Dead',
Monitor3 == 'Nueva' | Monitor3 == 'Viva' ~ 'Alive',
Monitor2 == 'Nueva' & is.na(Monitor3) ~ 'Presumed Dead',
Monitor2 == 'Viva' & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead'
))%>%
#calculate TimeAlive as difference between DatePlanted and DateDied
mutate(TimeAlive = DateDied - DatePlanted)%>%
mutate(PotentialTimeAlive = Today - DatePlanted)%>% #days since it was first planted
mutate(TimeAlive = case_when(Outcome == 'Alive' ~ (Today - DatePlanted),
Outcome == 'Dead' ~ (DateDied - DatePlanted),
Outcome == 'Presumed Dead' ~ (DateDied - DatePlanted)))%>%
mutate(RatioTimeAlive = (as.numeric(TimeAlive)) / (as.numeric(PotentialTimeAlive)))%>%
#removes rows for individuals handed out at Festival 2023
filter(!str_detect(Ranch, "Festival"))
#calculate when a seedling died based on the last Monitoring date it was seen alive
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))%>%
add_column(Outcome = NA)
#calculate when a seedling died based on the last Monitoring date it was seen alive
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))
#calculate when a seedling died based on the last Monitoring date it was seen alive
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))
#format date as DayMonthYear
seedlings_clean%>%
add_column(Outcome = NA)
#format date as DayMonthYear
seedlings_clean%>%
add_column(Outcome = NA)%>%
add_column(TimeAlive = NA)%>%
add_column(RatioTimeAlive = NA)%>%
add_column(PotentialTimeAlive = NA)%>%
mutate(DateDied = dmy(DateDied))%>%
mutate(DatePlanted = dmy(DatePlanted))%>%
mutate(RatioTimeAlive = dmy(RatioTimeAlive))%>%
mutate(PotentialTimeAlive = dmy(PotentialTimeAlive))%>%
mutate(Outcome = case_when(Monitor1 == 'Muerta' | Monitor2 == 'Muerta' | Monitor3 == 'Muerta' ~ 'Dead',
Monitor3 == 'Nueva' | Monitor3 == 'Viva' ~ 'Alive',
Monitor2 == 'Nueva' & is.na(Monitor3) ~ 'Presumed Dead',
Monitor2 == 'Viva' & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead',
is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ 'Presumed Dead'
))%>%
#calculate TimeAlive as difference between DatePlanted and DateDied
mutate(TimeAlive = DateDied - DatePlanted)%>%
mutate(PotentialTimeAlive = Today - DatePlanted)%>% #days since it was first planted
mutate(TimeAlive = case_when(Outcome == 'Alive' ~ (Today - DatePlanted),
Outcome == 'Dead' ~ (DateDied - DatePlanted),
Outcome == 'Presumed Dead' ~ (DateDied - DatePlanted)))%>%
mutate(RatioTimeAlive = (as.numeric(TimeAlive)) / (as.numeric(PotentialTimeAlive)))%>%
#removes rows for individuals handed out at Festival 2023
filter(!str_detect(Ranch, "Festival"))
#renames columns to simplified English, differentiates seed origin and seedling planted region
seedlings_clean <- seedlings_combined%>%
rename(Name = 'Nombre')%>%
rename(Town = 'Localidad')%>%
rename(Ranch = 'Rancho, Lugar o Sitio')%>%
rename(Monitor1 = '13/02/2022 - Monitoreo 1')%>%
rename(Monitor2 = '20/01/2023 Monitoreo 2')%>%
rename(Monitor3 = '13/12/2023\nMonitoreo 3')%>%
rename(OriginReg = 'Procedencia semilla  (color)')%>%
rename(PlantedReg = 'Región')%>%
rename(DatePlanted = 'Fecha transplante')%>%
rename(YearCollected = 'Año de colecta')%>%
rename(Observations = 'Observaciones')%>%
rename(Contact = 'Contacto')%>%
rename(PlantedIn = 'Sembrado en:')%>%
rename(Watered = 'Lluvia solida')%>%
select(-'Monitoreo 1 (__/__/__)')%>%
rename(OriginLabelAsh = 'Procedencia Etiqueta Ash Abril 2024')%>%
rename(`Metal tag ID` = 'Núm. Etiqueta')%>%
mutate(Monitor1=recode(Monitor1, 'Perdida' = 'Muerta'))%>%#reclass Perdida (poor) as Muerta (dead)
add_column(DateDied = NA)
#calculate when a seedling died based on the last Monitoring date it was seen alive
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
#calculate when a seedling died based on the last Monitoring date it was seen alive
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))
rlang::last_trace()
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))
seedlings_clean
#calculate when a seedling died based on the last Monitoring date it was seen alive
seedlings_clean%>%
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
Monitor1 == 'Nueva' & is.na(Monitor2) ~ DatePlanted,
Monitor1 == 'Nueva' & Monitor2 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Muerta' ~ DatePlanted,
Monitor1 == 'Viva' & Monitor2 == 'Muerta' ~'13/02/2022',
Monitor2 == 'Viva' & is.na(Monitor3) ~ '20/01/2023',
Monitor1 == 'Viva' & is.na(Monitor2) ~ '13/02/2022',
Monitor2 == 'Nueva' & Monitor3 == 'Muerta' ~ DatePlanted,
Monitor2 == 'Nueva' & is.na(Monitor3) ~ DatePlanted,
Monitor2 == 'Viva' & Monitor3 == 'Muerta' ~ '20/01/2023'))
#renames columns to simplified English, differentiates seed origin and seedling planted region
seedlings_clean <- seedlings_combined%>%
rename(Name = 'Nombre')%>%
rename(Town = 'Localidad')%>%
rename(Ranch = 'Rancho, Lugar o Sitio')%>%
rename(Monitor1 = '13/02/2022 - Monitoreo 1')%>%
rename(Monitor2 = '20/01/2023 Monitoreo 2')%>%
rename(Monitor3 = '13/12/2023\nMonitoreo 3')%>%
rename(OriginReg = 'Procedencia semilla  (color)')%>%
rename(PlantedReg = 'Región')%>%
rename(DatePlanted = 'Fecha transplante')%>%
rename(YearCollected = 'Año de colecta')%>%
rename(Observations = 'Observaciones')%>%
rename(Contact = 'Contacto')%>%
rename(PlantedIn = 'Sembrado en:')%>%
rename(Watered = 'Lluvia solida')%>%
select(-'Monitoreo 1 (__/__/__)')%>%
rename(OriginLabelAsh = 'Procedencia Etiqueta Ash Abril 2024')%>%
rename(`Metal tag ID` = 'Núm. Etiqueta')%>%
mutate(Monitor1=recode(Monitor1, 'Perdida' = 'Muerta'))%>%#reclass Perdida (poor) as Muerta (dead)
add_column(DateDied = NA)
mutate(DateDied = case_when(is.na(Monitor1) & is.na(Monitor2) & is.na(Monitor3) ~ DatePlanted,
